<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

	<jdbc:initialize-database data-source="dataSource" enabled="true" ignore-failures="ALL">
		<jdbc:script location="classpath:db-schema.sql"/>
		<jdbc:script location="classpath:db-test-data.sql"/>
	</jdbc:initialize-database>

	<bean class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="dataSource" />

	<util:properties id="hibernateProperties">
		<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
		<prop key="hibernate.show_sql">true</prop>
	</util:properties>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		p:dataSource-ref="dataSource"
		p:packagesToScan="cz.cvut.fit.ortstepa.universalbookingsystem.domain"
		p:hibernateProperties-ref="hibernateProperties" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<bean id="accountDao" class="cz.cvut.fit.ortstepa.universalbookingsystem.dao.hbn.HbnAccountDao"/>
	<bean id="googleAuthHelper" class="cz.cvut.fit.ortstepa.universalbookingsystem.helper.GoogleAuthHelper"/>
	<bean id="googleCalendarHelper" class="cz.cvut.fit.ortstepa.universalbookingsystem.helper.GoogleCalendarHelper">
		<property name="googleAuthHelper" ref="googleAuthHelper" />
	</bean>

	<bean id="googlePlusHelper" class="cz.cvut.fit.ortstepa.universalbookingsystem.helper.GooglePlusHelper">
		<property name="googleAuthHelper" ref="googleAuthHelper"/>			
	</bean>
	
	<context:component-scan base-package="cz.cvut.fit.ortstepa.universalbookingsystem.dao.hbn" />
	<context:component-scan base-package="cz.cvut.fit.ortstepa.universalbookingsystem.dao.jdbc" />
	<context:component-scan base-package="cz.cvut.fit.ortstepa.universalbookingsystem.service" />
	<context:component-scan base-package="cz.cvut.fit.ortstepa.universalbookingsystem.helper" />

	<tx:annotation-driven />

	<beans profile="default">
		<util:properties id="hibernateProperties">
			<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
			<prop key="hibernate.show_sql">true</prop>
		</util:properties>
		<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="org.postgresql.Driver"/>
			<property name="url" value="jdbc:postgresql://localhost:5432/ubs"/>
			<property name="username" value="postgres"/>
			<property name="password" value="postgres_password"/>
		</bean>
	</beans>
 	
 	<beans profile="prod">
 		<util:properties id="hibernateProperties">
			<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
			<prop key="hibernate.show_sql">false</prop>
		</util:properties>
	 	<bean class="java.net.URI" id="dbUrl">
	        <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
	    </bean>
	
	    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
	        <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
	        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
	        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
		</bean>
	</beans>

</beans>
